<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>

    <property name="severity" value="warning"/>

    <property name="fileExtensions" value="java, properties, xml"/>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="TreeWalker">

        <module name="Regexp">
            <property name="format" value="^([^\n\r ]+ )*(class|interface|enum) [^{]*\{\r?\n[^\n\r}]"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Leave empty row after class/interface/enum definition!"/>
            <property name="severity" value="error"/>
        </module>

        <module name="Regexp">
            <property name="format" value="[^\n\r{]\r?\n\}\r?\n"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Leave empty row before end of class/interface/enum!"/>
            <property name="severity" value="error"/>
        </module>

        <module name="OuterTypeFilename">
            <property name="severity" value="error"/>
        </module>
        <module name="AvoidStarImport">
            <property name="severity" value="error"/>
        </module>
        <module name="AvoidStaticImport">
            <property name="severity" value="error"/>
        </module>
        <module name="OneTopLevelClass">
            <property name="severity" value="error"/>
        </module>
        <module name="NoLineWrap">
            <property name="severity" value="error"/>
        </module>
        <module name="NeedBraces">
            <property name="id" value="NeedBracesAll"/>
            <property name="severity" value="error"/>
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE"/>
        </module>
        <module name="NeedBraces">
            <property name="id" value="NeedBracesIfStatement"/>
            <property name="severity" value="error"/>
            <property name="allowSingleLineStatement" value="true"/>
            <property name="tokens" value="LITERAL_IF"/>
        </module>
        <module name="LeftCurly">
            <property name="severity" value="error"/>
        </module>
        <module name="RightCurly"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="OneStatementPerLine">
            <property name="severity" value="error"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle">
            <property name="severity" value="error"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough">
            <property name="severity" value="error"/>
        </module>
        <module name="UpperEll">
            <property name="severity" value="error"/>
        </module>
        <module name="ModifierOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="PackageName">
            <property name="severity" value="error"/>
        </module>
        <module name="TypeName">
            <property name="severity" value="error"/>
        </module>
        <module name="StringLiteralEquality">
            <property name="severity" value="error"/>
        </module>
        <module name="MemberName"/>
        <module name="ParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="CatchParameterName"/>
        <module name="LocalVariableName"/>
        <module name="ClassTypeParameterName"/>
        <module name="MethodTypeParameterName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="MethodName"/>
        <module name="GenericWhitespace">
            <property name="severity" value="error"/>
        </module>
        <!--    This is removed until I can work out how to configure checkstyle properly    -->
        <!--        <module name="Indentation">-->
        <!--            <property name="lineWrappingIndentation" value="0"/>-->
        <!--        </module>-->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="true"/>
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="allowedAbbreviations" value="MDC, JDA, GSON, UI, ID, URL"/>
        </module>
        <module name="MethodParamPad">
            <property name="severity" value="error"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="severity" value="error"/>
            <property name="tokens"
                      value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="ParenPad">
            <property name="severity" value="error"/>
        </module>


        <!--    Warnings    -->

        <!--    TODO: JavaDoc    -->

        <!--    Formatting and layout    -->
        <module name="CommentsIndentation"/>
        <module name="DeclarationOrder">
            <message key="declaration.order.constructor"
                     value="Constructor definition in wrong order. Correct order = Static -> Instance -> Constructors -> Methods"/>
            <message key="declaration.order.instance"
                     value="Instance variable definition in wrong order. Correct order = Static -> Instance -> Constructors -> Methods"/>
            <message key="declaration.order.static"
                     value="Static variable definition in wrong order. Correct order = Static -> Instance -> Constructors -> Methods"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="EOL"/>
            <property name="tokens"
                      value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="VariableDeclarationUsageDistance">
            <property name="allowedDistance" value="5"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>


        <!--    Code checks    -->
        <module name="DefaultComesLast"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="EmptyStatement"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="UnnecessaryParentheses"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="RequireThis"/>

    </module>
</module>